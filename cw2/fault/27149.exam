REMOVE NOAH
REMOVE NOAH!!!


Q.1 Consider that instead of influencing data (e.g., the AES state), a
    fault might influence control-flow (e.g., a conditional statement)
    somehow during execution.  Stating any assumptions you make, give an
    alternative attack strategy based on this ability.
Q.2 Outline the methods available for hardening this AES implementation
    against fault attacks; for each method, explain any assumptions you
    make and compare it with the others wrt.  metrics such as robustness,
    latency, and memory footprint.



Q.4 For side-channel attacks, the number of acquisitions required can be
    used as a measure of efficiency.  Outline the equivalent measure for
    fault attacks, and explain whether (and why) you think a side-channel
    attack on AES could be as efficient as a fault attack based on these
    measures.

    The equivalent measure of number of aquisitions in terms of a fault attack
    would be how many faults you inject into the device. Obviously the more
    faults you are able to inject the better chances of your success. However,
    in reality the ability to inject a fault more than once is very limited.
    Injecting faults requires the use of lasers and other sophisticated
    equipment to ensure that the fault is inserted in exactly the correct place
    in the AES algorithm (in this case at the 8th round, before the SubBytes
    function at (0,0) in the state matrix). So although in simulation you can
    easily do this by increasing the number of interactions + faults induced.
    In practice, this would take a significant amount of time and effort,
    arguably more time than it would to iterate through all the possibilities
    from one single fault. So the efficiency of a fault attack purely lies in
    how many faults you induce in a target device.
    In summary, a side channel attack can be as efficient as a fault attack
    based on these measures as the time taken to gather.... FINISH THIS

Q.5 How do the properties of different AES round functions influence the
    effectiveness of your attack?  More specifically, imagine SubBytes is
    removed: does this help or hinder your attack?
